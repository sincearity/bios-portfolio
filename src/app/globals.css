@import 'tailwindcss';

/* =========================================================
   1) DESIGN TOKENS (base)
   ========================================================= */
:root {
  /* neutrals */
  --bg: 0 0% 0%;
  --fg: 0 0% 100%;
  --muted: 0 0% 70%;

  /* accent (default = cyan/green) */
  --accent: 160 100% 60%;

  /* surfaces */
  --surface-0: var(--bg); /* page */
  --surface-1: 0 0% 6%; /* panels/headers */
  --surface-2: 0 0% 10%; /* elevated surfaces */

  /* borders & rings */
  --border: 0 0% 22%;
  --ring: var(--accent);

  /* states */
  --success: 160 80% 48%;
  --warning: 40 95% 55%;
  --danger: 0 85% 58%;

  /* radii / spacing / motion */
  --radius-sm: 6px;
  --radius: 8px;
  --radius-lg: 12px;
  --space: 24px;
  --motion-fast: 150ms;
  --motion-slow: 400ms;

  /* card/headers */
  --card: var(--surface-1);

  /* background grid texture */
  --grid: radial-gradient(circle at 1px 1px, rgba(255, 255, 255, 0.06) 1px, transparent 1px);

  /* aurora colors (match accent lightly) */
  --aurora-1: 0, 255, 200; /* cyan/green */
  --aurora-2: 150, 0, 255; /* violet */
  --aurora-3: 0, 120, 255; /* blue */
}
/* =========================================================
1a) LIGHT MODE TOKENS (applied when <html> lacks .dark)
========================================================= */
html:not(.dark) {
  /* neutrals */
  --bg: 0 0% 100%; /* page background */
  --fg: 222 15% 12%; /* main text */
  --muted: 222 10% 45%; /* muted/subtle text */

  /* accent (slightly deeper than dark mode for contrast) */
  --accent: 210 90% 45%;

  /* surfaces */
  --surface-0: var(--bg);
  --surface-1: 0 0% 98%;
  --surface-2: 0 0% 96%;

  /* borders & rings */
  --border: 222 16% 85%;
  --ring: var(--accent);

  /* states */
  --success: 160 56% 38%;
  --warning: 40 95% 45%;
  --danger: 0 70% 45%;

  /* card background */
  --card: var(--surface-1);

  /* aurora colors tuned for lighter backdrop */
  --aurora-1: 0, 200, 255; /* light cyan */
  --aurora-2: 160, 120, 255; /* lavender */
  --aurora-3: 255, 180, 220; /* pink */
}

/* =========================================================
   2) ACCENT THEME PRESETS  (toggle via <html data-accent="...">)
   ========================================================= */
html[data-accent='cyan'] {
  --accent: 160 100% 60%;
  --aurora-1: 0, 255, 200;
  --aurora-2: 150, 0, 255;
  --aurora-3: 0, 120, 255;
}
html[data-accent='purple'] {
  --accent: 268 90% 65%;
  --aurora-1: 140, 0, 255;
  --aurora-2: 255, 0, 180;
  --aurora-3: 80, 0, 255;
}
html[data-accent='amber'] {
  --accent: 38 100% 56%;
  --aurora-1: 255, 180, 0;
  --aurora-2: 255, 80, 0;
  --aurora-3: 255, 220, 120;
}
html[data-accent='blue'] {
  --accent: 212 100% 60%;
  --aurora-1: 0, 140, 255;
  --aurora-2: 0, 220, 255;
  --aurora-3: 80, 0, 255;
}
html[data-accent='magenta'] {
  --accent: 315 85% 65%;
  --aurora-1: 255, 0, 180;
  --aurora-2: 160, 0, 255;
  --aurora-3: 255, 120, 220;
}

/* =========================================================
   3) BASE ELEMENTS
   ========================================================= */
html,
body {
  height: 100%;
}

body {
  background: hsl(var(--bg));
  color: hsl(var(--fg));
  font-family: ui-monospace, monospace;
  font-size: 15px;
  line-height: 1.5;
  padding: 2rem;
}

/* selections + links */
::selection {
  background: hsl(var(--accent));
  color: hsl(var(--bg));
}
a {
  text-underline-offset: 3px;
}
a:hover {
  text-decoration: underline;
}

/* =========================================================
   4) AMBIENT BACKGROUND (aurora + grid + vignette + noise)
   ========================================================= */
/* aurora shift behind the grid */
@keyframes bg-shift {
  0% {
    background-position:
      0% 50%,
      0 0;
  }
  50% {
    background-position:
      100% 50%,
      0 0;
  }
  100% {
    background-position:
      0% 50%,
      0 0;
  }
}

/* layer A: aurora + grid (blend) */
body::before {
  content: '';
  position: fixed;
  inset: 0;
  pointer-events: none;
  background:
    linear-gradient(
      120deg,
      rgba(var(--aurora-1), 0.08) 0%,
      rgba(var(--aurora-2), 0.08) 40%,
      rgba(var(--aurora-3), 0.08) 100%
    ),
    var(--grid);
  background-size:
    200% 200%,
    16px 16px;
  background-repeat: no-repeat, repeat;
  background-position:
    0% 50%,
    0 0;
  mix-blend-mode: overlay;
  animation: bg-shift 22s ease-in-out infinite;
}

/* layer B: vignette + noise flicker */
@keyframes grain-shift {
  0%,
  100% {
    background-position:
      center,
      0 0;
  }
  50% {
    background-position:
      center,
      18px -18px;
  }
}
body::after {
  content: '';
  position: fixed;
  inset: 0;
  pointer-events: none;
  background:
    radial-gradient(circle at center, rgba(0, 0, 0, 0) 72%, rgba(0, 0, 0, 0.45) 100%),
    url("data:image/svg+xml;utf8,\
<svg xmlns='http://www.w3.org/2000/svg' width='160' height='160' viewBox='0 0 160 160'>\
<filter id='n'><feTurbulence type='fractalNoise' baseFrequency='0.9' numOctaves='2' stitchTiles='stitch' /></filter>\
<rect width='100%' height='100%' filter='url(%23n)' opacity='0.035'/></svg>");
  background-repeat: no-repeat, repeat;
  background-size:
    100% 100%,
    160px 160px;
  background-position:
    center,
    0 0;
  animation: grain-shift 3.5s steps(2, end) infinite;
}

/* ---- Mobile tweaks ---- */
@media (max-width: 640px) {
  body {
    padding: 2rem;
  } /* keep or adjust */
  body::after {
    background:
      radial-gradient(circle at center, rgba(0, 0, 0, 0) 78%, rgba(0, 0, 0, 0.3) 100%),
      url("data:image/svg+xml;utf8,\
<svg xmlns='http://www.w3.org/2000/svg' width='160' height='160' viewBox='0 0 160 160'>\
<filter id='n'><feTurbulence type='fractalNoise' baseFrequency='0.9' numOctaves='2' stitchTiles='stitch' /></filter>\
<rect width='100%' height='100%' filter='url(%23n)' opacity='0.035'/></svg>");
    background-repeat: no-repeat, repeat;
    background-size:
      100% 100%,
      160px 160px;
    background-position:
      center,
      0 0;
  }
}

/* =========================================================
   5) TERMINAL GLOW + CURSOR
   ========================================================= */
@keyframes pulse-glow {
  0%,
  100% {
    box-shadow:
      0 8px 24px rgba(0, 0, 0, 0.35),
      0 0 30px hsl(var(--accent) / 0.12);
  }
  50% {
    box-shadow:
      0 8px 24px rgba(0, 0, 0, 0.35),
      0 0 44px hsl(var(--accent) / 0.2);
  }
}
.animate-glow {
  animation: pulse-glow 4s ease-in-out infinite;
}

/* Blinking block cursor (terminal-style) */
@keyframes blink-block {
  0%,
  50% {
    opacity: 1;
  }
  51%,
  100% {
    opacity: 0;
  }
}

.caret {
  display: inline-block;
  width: 0.65em; /* block width ~ character width */
  height: 1.1em; /* match line height */
  vertical-align: -0.15em; /* align with baseline */
  margin-left: 0.1em;
  background: hsl(var(--fg));
  animation: blink-block 1.1s steps(1, start) infinite;
}

/* =========================================================
   5b) TERMINAL CRT / SCANLINES / GLITCH FX
   ========================================================= */

/* CRT vignette glow */
.fx-crt {
  position: relative;
  isolation: isolate;
  filter: saturate(1.05) contrast(1.02);
}
/* keep inside the rounded box */
.fx-crt::before {
  content: '';
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
  background:
    radial-gradient(ellipse at center, rgba(255, 255, 255, 0.06) 0%, rgba(255, 255, 255, 0) 60%),
    radial-gradient(ellipse at center, rgba(0, 0, 0, 0) 55%, rgba(0, 0, 0, 0.45) 100%);
}

/* Scanline overlay */
.scanlines {
  position: relative;
  isolation: isolate;
}
.scanlines::after {
  content: '';
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
  background: repeating-linear-gradient(
    to bottom,
    rgba(255, 255, 255, 0.05) 0px,
    rgba(255, 255, 255, 0.05) 1px,
    rgba(0, 0, 0, 0) 3px
  );
  mix-blend-mode: multiply;
  opacity: 0.18;
  animation: scan-flicker 6s ease-in-out infinite;
  z-index: 2;
}
@keyframes scan-flicker {
  0%,
  100% {
    opacity: 0.16;
  }
  40%,
  60% {
    opacity: 0.22;
  }
}

/* Glitch text effect */
.glitch {
  position: relative;
  display: inline-block;
}
.glitch::before,
.glitch::after {
  content: attr(data-text);
  position: absolute;
  left: 0;
  top: 0;
  pointer-events: none;
}
.glitch::before {
  text-shadow: -1px 0 rgba(255, 0, 0, 0.7);
}
.glitch::after {
  text-shadow: 1px 0 rgba(0, 128, 255, 0.7);
}

@keyframes glitch-jitter {
  0% {
    transform: translate(0, 0);
  }
  15% {
    transform: translate(-0.5px, 0.4px);
  }
  30% {
    transform: translate(0.6px, -0.5px);
  }
  45% {
    transform: translate(-0.4px, 0.6px);
  }
  60% {
    transform: translate(0.5px, 0.2px);
  }
  75% {
    transform: translate(-0.6px, -0.4px);
  }
  100% {
    transform: translate(0, 0);
  }
}
.glitch,
.glitch::before,
.glitch::after {
  animation: glitch-jitter 900ms steps(1, end) infinite;
}

/* =========================================================
   6) ACCESSIBILITY: REDUCED MOTION (one place for all)
   ========================================================= */
@media (prefers-reduced-motion: reduce) {
  .animate-glow,
  .animate-blink-sync,
  .caret,
  .caret > i,
  .glitch,
  .glitch::before,
  .glitch::after,
  .scanlines::after,
  .scene-enter,
  .scene-exit,
  .scan-wipe {
    animation: none !important;
  }
  body::before,
  body::after {
    animation: none !important;
  }
}

/* =========================================================
   7) UX UTILITIES
   ========================================================= */
.focus-ring {
  outline: none;
}
.focus-ring:focus-visible {
  text-decoration: underline;
  text-decoration-thickness: 2px;
  text-underline-offset: 4px;
  text-decoration-color: hsl(var(--accent) / 0.8);
}

.text-muted {
  color: hsl(var(--muted));
}
.text-success {
  color: hsl(var(--success));
}
.text-warning {
  color: hsl(var(--warning));
}
.text-danger {
  color: hsl(var(--danger));
}

.link {
  color: hsl(var(--accent));
  text-underline-offset: 3px;
}
.link:hover {
  text-decoration: underline;
}

/* terminal container */
.terminal-box {
  position: relative;
  border: none;
  background: transparent;
  border-radius: var(--radius);
  backdrop-filter: none;
  overflow: hidden;
  box-shadow: none;
}

.fx-crt::before {
  inset: 0;
  border-radius: inherit;
}
.scanlines::after {
  border-radius: inherit;
  opacity: 0.12;
}
.scan-wipe {
  border-radius: inherit;
}

/* remove effect for light mode */
html:not(.dark) .fx-crt::before,
html:not(.dark) .scanlines::after {
  content: none;
}

/* =========================================================
   8) SCENE TRANSITIONS
   ========================================================= */
@keyframes scene-fade-in {
  from {
    opacity: 0;
    transform: translateY(4px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
@keyframes scene-fade-out {
  from {
    opacity: 1;
    transform: translateY(0);
  }
  to {
    opacity: 0;
    transform: translateY(-4px);
  }
}
.scene-enter {
  animation: scene-fade-in 220ms ease-out;
}
.scene-exit {
  animation: scene-fade-out 180ms ease-in forwards;
}

/* quick CRT scanline wipe */
@keyframes scan-wipe {
  0% {
    opacity: 0;
    transform: translateY(-100%);
  }
  10% {
    opacity: 0.6;
  }
  100% {
    opacity: 0;
    transform: translateY(100%);
  }
}
.scan-wipe {
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
  background: linear-gradient(
    180deg,
    rgba(255, 255, 255, 0) 0%,
    rgba(255, 255, 255, 0.06) 50%,
    rgba(255, 255, 255, 0) 100%
  );
  animation: scan-wipe 380ms ease-in-out;
}
